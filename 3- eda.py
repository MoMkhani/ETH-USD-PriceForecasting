# -*- coding: utf-8 -*-
"""Data Description and Exploration.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A2Uw-sUxi6iu-OmeodPQaW5vRTfpMQwS

#**4 Data Description and Exploration**

##**4.1 Data Information**
"""

# Basic info
eth.info()

"""##**4.2 Summary Statistics**"""

# Summary stats
eth.describe()

"""##**4.3 Data Visualization**"""

# Resample data based on time periods to have clear view
eth_month = eth.resample('M').median()
eth_week = eth.resample('W').median()
eth_daily = eth.resample('D').median()

"""###**4.3.1 ETH Price through Time**"""

# Plot closing price through time
eth_week.close.plot(title='ETH price through time',
                                      xlabel='Time', ylabel='Price (USD)', figsize=[18,10])
plt.show()

"""ETH price has increased exponentially since 2017, first got peaked in the first weeks of 2018. Since then the price fluctuated between 100 and 500 usd until the last months of 2020. ETh started 2021 above 1000 usd and soon passed 2000 and 3000 usd values.

###**4.3.2 ETH Volume through Time**
"""

# Plot volume through time
eth_week['Volume ETH'].plot(title='ETH volume through time',
                                      xlabel='Time', ylabel='Volume (ETH)', color='red', figsize=[18,10])
plt.show()

"""###**4.3.3 Closing ETH Price in 2021 by Day, Month and Year**"""

# Set dates as 2021
start, end = '2021-01', '2021-12'
# Plot three frequencies (daily, weekly, and monthly basis)
fig, ax = plt.subplots(figsize=(18, 10))
ax.plot(eth.loc[start:end, 'close'], marker='.', linestyle='-', linewidth = 0.5, label='Daily', color='black')
ax.plot(eth_week.loc[start:end, 'close'], marker='o', markersize=8, linestyle='-', label='Weekly', color='coral')
ax.plot(eth_month.loc[start:end, 'close'], marker='o', markersize=8, linestyle='-', label='Monthly', color='violet')
ax.set_title('Closing ETH Price in 2021 by Day, Month and Year')
ax.set_xlabel('Time')
ax.set_ylabel('Median Closing Price (USD)')
ax.legend()

"""###**4.3.4 ETH Opening Price Heatmap**"""

import calendar
# Create pivot table of eth opening price
all_month_year_df = pd.pivot_table(eth, values="open",
                                   index=eth.index.month,
                                   columns=eth.index.year
)
named_index = [[calendar.month_abbr[i] if isinstance(i, int) else i for i in list(all_month_year_df.index)]] # name months
all_month_year_df = all_month_year_df.set_index(named_index)

plt.figure(figsize=[18,10])
# Plot the heatmap
ax = sns.heatmap(all_month_year_df, cmap='RdYlGn', robust=True, fmt='.2f', 
                 annot=True, linewidths=.5, annot_kws={'size':11}, 
                 cbar_kws={'shrink':.8, 'label':'Open'})                       
    
ax.set_yticklabels(ax.get_yticklabels(), rotation=0, fontsize=10)
ax.set_xticklabels(ax.get_xticklabels(), rotation=0, fontsize=10)
plt.title('Median ETH Opening Price (USD)', fontdict={'fontsize':15},    pad=14)
plt.xlabel('Time')
plt.show()

"""###**4.3.5 Plotting the Change**"""

# Make copy of original eth dataset
vis_df = eth.copy()
# Adding change column in new dateset using shift
vis_df['change'] = vis_df.close.div(vis_df.close.shift())
# Plotting the change
vis_df['change'].plot(figsize=(20, 8), fontsize = 16)
plt.xlabel('Time')
plt.ylabel('Change')
plt.title('ETH Closing Price Change by Time')
plt.show()

"""###**4.3.6 Plotting the Percentage Change**"""

# Resample new viz dataset by month
vis_month = vis_df.resample('M').median()
# Calculate percentage change in new column
vis_month['pct_change'] = vis_month.close.pct_change()*100

fig, ax = plt.subplots(figsize=(18, 10))
# Plot percentage change
vis_month['pct_change'].plot(kind='bar', color='coral', ax=ax)
# Set major ticks and tick labels
ax.set_xticks(range(vis_month.index.size))
ax.set_xticklabels([ts.strftime('%b\n%Y') if ts.year != vis_month.index[idx-1].year
                    else ts.strftime('%b') for idx, ts in enumerate(vis_month.index)])
ax.figure.autofmt_xdate(rotation=0, ha='center');
ax.set(xlabel='Time',
       ylabel='Percentage Change',
       title='Percentage Change through Time')
plt.xticks(rotation=90)
ax.legend()
plt.show()

"""###**4.3.7 Plotting the Decomposition**"""

# Plot decomposition using statsmodel api
plt.figure(figsize=[18,10])
sm.tsa.seasonal_decompose(eth.resample("W").median().close).plot()
plt.show()

# Add log to closing price
eth["close_log"] = np.log1p(eth.close)

plt.figure(figsize=[18,10])
sm.tsa.seasonal_decompose(eth.resample("W").median().close_log).plot()
plt.show()