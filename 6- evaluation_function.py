# -*- coding: utf-8 -*-
"""Evaluation Function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A2Uw-sUxi6iu-OmeodPQaW5vRTfpMQwS

# **7. Evaluation Function**
"""

def evaluate_model(model, model_name="Model", test_data=X_test, target_data=y_test):
    """ Create an evaluation function and plot the result.
    Args:
        model: selected model that has been used
        model_name: label to plot
        test_data: validation set of features
        target_data: validation set of target
    
    Returns:
        test_rs: R-squared value of test set
        test_MAE: mean absolute error of test set
    
    """
    y_pred_test = model.predict(test_data)

    try:
        y_pred_test = y_pred_test.yhat 
    except:
        pass

    test_rs = r2_score(target_data,y_pred_test)
    print('R Squared : ', round(test_rs,5))

    test_MAE = mean_absolute_error(target_data, y_pred_test)
    print('Mean Absolute Error: ', round(test_MAE, 5))

    plt.figure(figsize=(20,10))
    plt.plot(y_pred_test, color='green', marker='o', linestyle='dashed',label='Predicted Price')
    plt.plot(target_data, color='red', label='Actual Price')
    plt.title('Comparison of actual and predicted ETH-USD price for ' + model_name)
    plt.xlabel('Day')
    plt.ylabel('Prices')
    plt.legend()
    plt.show()
    
    return test_rs, test_MAE